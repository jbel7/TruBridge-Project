# -*- coding: utf-8 -*-
"""correlation_algorithm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mSnH4Xi69yYDfIDBptO7KvKMY4ubqePU
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

#load dataset
mortality_df = pd.read_csv("mortality_data.csv")

# Drop missing values
mortality_df = mortality_df[['During pregnancy','0 to 60 days ', '61 to 180 days', '181 to 365 days']].dropna()

#compute correlation
correlation = mortality_df.corr()
print("Correlation Matrix:\n", correlation)

# Heatmap visualization
sns.heatmap(correlation, annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap: Height vs Weight")
plt.show()

# Select relevant powers
selected_features = ['During pregnancy', '0 to 60 days ', '61 to 180 days']
mortality_df[selected_features] = mortality_df[selected_features].astype(int)

# Define input (X) and output (y)
X = mortality_df[selected_features]
y = mortality_df['During pregnancy']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train logistic regression model
log_reg = LogisticRegression()
log_reg.fit(X_train, y_train)

# Predict
y_pred = log_reg.predict(X_test)

# Model evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))